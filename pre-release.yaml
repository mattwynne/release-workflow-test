name: Pre-release

on:
  push:
    branches: [main]

jobs:

  versions:
    runs-on: ubuntu-latest
    name: Get version numbers
    outputs:
      released-version: ${{ steps.current-release.outputs.result }}
      next-version: ${{ steps.next-release.outputs.result }}
    steps:
      - uses: actions/checkout@v2
      - name: read the current release version from git tags
        id: current-release
        run: |
          git fetch --tags
          version_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          version=${version_tag/v/}
          echo "::set-output name=result::$version"
      - name: read latest version from the changelog
        id: next-release-from-changelog
        uses: mattwynne/changelog-action@v1.2
        with:
          args: latest
      - name: Parse version number from changelog release name
        id: next-release
        run: |
          version_heading=${{ steps.next-release-from-changelog.outputs.output }}
          version=${version_heading/v}
          echo "::set-output name=result::$version"
      - name: Report version numbers detected
        run: |
          echo "Released: ${{ steps.current-release.outputs.result }}"
          echo "Next:     ${{ steps.next-release.outputs.result }}"

  create-release-pr:
    runs-on: ubuntu-latest
    name: Create / Update Release PR
    needs: versions
    if: needs.versions.outputs.released-version != needs.versions.outputs.next-version
    env:
      next_version: ${{ needs.versions.outputs.next-version }}
      released_version: ${{ needs.versions.outputs.released-version }}
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v2
      - run: gh auth status
      - name: Create Pull Request
        run: |
          gh pr create \
            --base releases \
            --head main \
            --title "Release v${{ env.next_version }}" \
            --body "This is a test"